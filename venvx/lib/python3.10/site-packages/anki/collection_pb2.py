# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: anki/collection.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import builder as _builder
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from anki import generic_pb2 as anki_dot_generic__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x15\x61nki/collection.proto\x12\x0f\x61nki.collection\x1a\x12\x61nki/generic.proto\"z\n\x15OpenCollectionRequest\x12\x17\n\x0f\x63ollection_path\x18\x01 \x01(\t\x12\x19\n\x11media_folder_path\x18\x02 \x01(\t\x12\x15\n\rmedia_db_path\x18\x03 \x01(\t\x12\x16\n\x0e\x66orce_schema11\x18\x63 \x01(\x08\"7\n\x16\x43loseCollectionRequest\x12\x1d\n\x15\x64owngrade_to_schema11\x18\x01 \x01(\x08\")\n\x15\x43heckDatabaseResponse\x12\x10\n\x08problems\x18\x01 \x03(\t\"\xe1\x01\n\tOpChanges\x12\x0c\n\x04\x63\x61rd\x18\x01 \x01(\x08\x12\x0c\n\x04note\x18\x02 \x01(\x08\x12\x0c\n\x04\x64\x65\x63k\x18\x03 \x01(\x08\x12\x0b\n\x03tag\x18\x04 \x01(\x08\x12\x10\n\x08notetype\x18\x05 \x01(\x08\x12\x0e\n\x06\x63onfig\x18\x06 \x01(\x08\x12\x13\n\x0b\x64\x65\x63k_config\x18\x0b \x01(\x08\x12\r\n\x05mtime\x18\x0c \x01(\x08\x12\x15\n\rbrowser_table\x18\x07 \x01(\x08\x12\x17\n\x0f\x62rowser_sidebar\x18\x08 \x01(\x08\x12\x11\n\tnote_text\x18\t \x01(\x08\x12\x14\n\x0cstudy_queues\x18\n \x01(\x08\"P\n\x12OpChangesWithCount\x12\r\n\x05\x63ount\x18\x01 \x01(\r\x12+\n\x07\x63hanges\x18\x02 \x01(\x0b\x32\x1a.anki.collection.OpChanges\"J\n\x0fOpChangesWithId\x12\n\n\x02id\x18\x01 \x01(\x03\x12+\n\x07\x63hanges\x18\x02 \x01(\x0b\x32\x1a.anki.collection.OpChanges\";\n\nUndoStatus\x12\x0c\n\x04undo\x18\x01 \x01(\t\x12\x0c\n\x04redo\x18\x02 \x01(\t\x12\x11\n\tlast_step\x18\x03 \x01(\r\"\xb5\x01\n\x12OpChangesAfterUndo\x12+\n\x07\x63hanges\x18\x01 \x01(\x0b\x32\x1a.anki.collection.OpChanges\x12\x11\n\toperation\x18\x02 \x01(\t\x12\x1d\n\x15reverted_to_timestamp\x18\x03 \x01(\x03\x12/\n\nnew_status\x18\x04 \x01(\x0b\x32\x1b.anki.collection.UndoStatus\x12\x0f\n\x07\x63ounter\x18\x05 \x01(\r\"\xe4\x04\n\x08Progress\x12#\n\x04none\x18\x01 \x01(\x0b\x32\x13.anki.generic.EmptyH\x00\x12\x39\n\nmedia_sync\x18\x02 \x01(\x0b\x32#.anki.collection.Progress.MediaSyncH\x00\x12\x15\n\x0bmedia_check\x18\x03 \x01(\tH\x00\x12\x37\n\tfull_sync\x18\x04 \x01(\x0b\x32\".anki.collection.Progress.FullSyncH\x00\x12;\n\x0bnormal_sync\x18\x05 \x01(\x0b\x32$.anki.collection.Progress.NormalSyncH\x00\x12\x41\n\x0e\x64\x61tabase_check\x18\x06 \x01(\x0b\x32\'.anki.collection.Progress.DatabaseCheckH\x00\x12\x13\n\timporting\x18\x07 \x01(\tH\x00\x12\x13\n\texporting\x18\x08 \x01(\tH\x00\x1a<\n\tMediaSync\x12\x0f\n\x07\x63hecked\x18\x01 \x01(\t\x12\r\n\x05\x61\x64\x64\x65\x64\x18\x02 \x01(\t\x12\x0f\n\x07removed\x18\x03 \x01(\t\x1a.\n\x08\x46ullSync\x12\x13\n\x0btransferred\x18\x01 \x01(\r\x12\r\n\x05total\x18\x02 \x01(\r\x1a;\n\nNormalSync\x12\r\n\x05stage\x18\x01 \x01(\t\x12\r\n\x05\x61\x64\x64\x65\x64\x18\x02 \x01(\t\x12\x0f\n\x07removed\x18\x03 \x01(\t\x1aJ\n\rDatabaseCheck\x12\r\n\x05stage\x18\x01 \x01(\t\x12\x13\n\x0bstage_total\x18\x02 \x01(\r\x12\x15\n\rstage_current\x18\x03 \x01(\rB\x07\n\x05value\"X\n\x13\x43reateBackupRequest\x12\x15\n\rbackup_folder\x18\x01 \x01(\t\x12\r\n\x05\x66orce\x18\x02 \x01(\x08\x12\x1b\n\x13wait_for_completion\x18\x03 \x01(\x08\x32\xda\x06\n\x11\x43ollectionService\x12M\n\x0eOpenCollection\x12&.anki.collection.OpenCollectionRequest\x1a\x13.anki.generic.Empty\x12O\n\x0f\x43loseCollection\x12\'.anki.collection.CloseCollectionRequest\x1a\x13.anki.generic.Empty\x12L\n\rCheckDatabase\x12\x13.anki.generic.Empty\x1a&.anki.collection.CheckDatabaseResponse\x12\x41\n\rGetUndoStatus\x12\x13.anki.generic.Empty\x1a\x1b.anki.collection.UndoStatus\x12@\n\x04Undo\x12\x13.anki.generic.Empty\x1a#.anki.collection.OpChangesAfterUndo\x12@\n\x04Redo\x12\x13.anki.generic.Empty\x1a#.anki.collection.OpChangesAfterUndo\x12@\n\x12\x41\x64\x64\x43ustomUndoEntry\x12\x14.anki.generic.String\x1a\x14.anki.generic.UInt32\x12\x44\n\x10MergeUndoEntries\x12\x14.anki.generic.UInt32\x1a\x1a.anki.collection.OpChanges\x12@\n\x0eLatestProgress\x12\x13.anki.generic.Empty\x1a\x19.anki.collection.Progress\x12\x39\n\rSetWantsAbort\x12\x13.anki.generic.Empty\x1a\x13.anki.generic.Empty\x12H\n\x0c\x43reateBackup\x12$.anki.collection.CreateBackupRequest\x1a\x12.anki.generic.Bool\x12\x41\n\x15\x41waitBackupCompletion\x12\x13.anki.generic.Empty\x1a\x13.anki.generic.EmptyB\x02P\x01\x62\x06proto3')

_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, globals())
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'anki.collection_pb2', globals())
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  DESCRIPTOR._serialized_options = b'P\001'
  _OPENCOLLECTIONREQUEST._serialized_start=62
  _OPENCOLLECTIONREQUEST._serialized_end=184
  _CLOSECOLLECTIONREQUEST._serialized_start=186
  _CLOSECOLLECTIONREQUEST._serialized_end=241
  _CHECKDATABASERESPONSE._serialized_start=243
  _CHECKDATABASERESPONSE._serialized_end=284
  _OPCHANGES._serialized_start=287
  _OPCHANGES._serialized_end=512
  _OPCHANGESWITHCOUNT._serialized_start=514
  _OPCHANGESWITHCOUNT._serialized_end=594
  _OPCHANGESWITHID._serialized_start=596
  _OPCHANGESWITHID._serialized_end=670
  _UNDOSTATUS._serialized_start=672
  _UNDOSTATUS._serialized_end=731
  _OPCHANGESAFTERUNDO._serialized_start=734
  _OPCHANGESAFTERUNDO._serialized_end=915
  _PROGRESS._serialized_start=918
  _PROGRESS._serialized_end=1530
  _PROGRESS_MEDIASYNC._serialized_start=1276
  _PROGRESS_MEDIASYNC._serialized_end=1336
  _PROGRESS_FULLSYNC._serialized_start=1338
  _PROGRESS_FULLSYNC._serialized_end=1384
  _PROGRESS_NORMALSYNC._serialized_start=1386
  _PROGRESS_NORMALSYNC._serialized_end=1445
  _PROGRESS_DATABASECHECK._serialized_start=1447
  _PROGRESS_DATABASECHECK._serialized_end=1521
  _CREATEBACKUPREQUEST._serialized_start=1532
  _CREATEBACKUPREQUEST._serialized_end=1620
  _COLLECTIONSERVICE._serialized_start=1623
  _COLLECTIONSERVICE._serialized_end=2481
# @@protoc_insertion_point(module_scope)
