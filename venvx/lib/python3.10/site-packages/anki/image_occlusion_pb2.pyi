"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
Copyright: Ankitects Pty Ltd and contributors
License: GNU AGPL, version 3 or later; http://www.gnu.org/licenses/agpl.html
"""
import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import sys

if sys.version_info >= (3, 8):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing_extensions.final
class GetImageForOcclusionRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    PATH_FIELD_NUMBER: builtins.int
    path: builtins.str
    def __init__(
        self,
        *,
        path: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["path", b"path"]) -> None: ...

global___GetImageForOcclusionRequest = GetImageForOcclusionRequest

@typing_extensions.final
class ImageData(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    DATA_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    data: builtins.bytes
    name: builtins.str
    def __init__(
        self,
        *,
        data: builtins.bytes = ...,
        name: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["data", b"data", "name", b"name"]) -> None: ...

global___ImageData = ImageData

@typing_extensions.final
class AddImageOcclusionNoteRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    IMAGE_PATH_FIELD_NUMBER: builtins.int
    OCCLUSIONS_FIELD_NUMBER: builtins.int
    HEADER_FIELD_NUMBER: builtins.int
    BACK_EXTRA_FIELD_NUMBER: builtins.int
    TAGS_FIELD_NUMBER: builtins.int
    image_path: builtins.str
    occlusions: builtins.str
    header: builtins.str
    back_extra: builtins.str
    @property
    def tags(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    def __init__(
        self,
        *,
        image_path: builtins.str = ...,
        occlusions: builtins.str = ...,
        header: builtins.str = ...,
        back_extra: builtins.str = ...,
        tags: collections.abc.Iterable[builtins.str] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["back_extra", b"back_extra", "header", b"header", "image_path", b"image_path", "occlusions", b"occlusions", "tags", b"tags"]) -> None: ...

global___AddImageOcclusionNoteRequest = AddImageOcclusionNoteRequest

@typing_extensions.final
class ImageClozeNote(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    IMAGE_DATA_FIELD_NUMBER: builtins.int
    OCCLUSIONS_FIELD_NUMBER: builtins.int
    HEADER_FIELD_NUMBER: builtins.int
    BACK_EXTRA_FIELD_NUMBER: builtins.int
    TAGS_FIELD_NUMBER: builtins.int
    image_data: builtins.bytes
    occlusions: builtins.str
    header: builtins.str
    back_extra: builtins.str
    @property
    def tags(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    def __init__(
        self,
        *,
        image_data: builtins.bytes = ...,
        occlusions: builtins.str = ...,
        header: builtins.str = ...,
        back_extra: builtins.str = ...,
        tags: collections.abc.Iterable[builtins.str] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["back_extra", b"back_extra", "header", b"header", "image_data", b"image_data", "occlusions", b"occlusions", "tags", b"tags"]) -> None: ...

global___ImageClozeNote = ImageClozeNote

@typing_extensions.final
class GetImageOcclusionNoteRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NOTE_ID_FIELD_NUMBER: builtins.int
    note_id: builtins.int
    def __init__(
        self,
        *,
        note_id: builtins.int = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["note_id", b"note_id"]) -> None: ...

global___GetImageOcclusionNoteRequest = GetImageOcclusionNoteRequest

@typing_extensions.final
class UpdateImageOcclusionNoteRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NOTE_ID_FIELD_NUMBER: builtins.int
    OCCLUSIONS_FIELD_NUMBER: builtins.int
    HEADER_FIELD_NUMBER: builtins.int
    BACK_EXTRA_FIELD_NUMBER: builtins.int
    TAGS_FIELD_NUMBER: builtins.int
    note_id: builtins.int
    occlusions: builtins.str
    header: builtins.str
    back_extra: builtins.str
    @property
    def tags(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    def __init__(
        self,
        *,
        note_id: builtins.int = ...,
        occlusions: builtins.str = ...,
        header: builtins.str = ...,
        back_extra: builtins.str = ...,
        tags: collections.abc.Iterable[builtins.str] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["back_extra", b"back_extra", "header", b"header", "note_id", b"note_id", "occlusions", b"occlusions", "tags", b"tags"]) -> None: ...

global___UpdateImageOcclusionNoteRequest = UpdateImageOcclusionNoteRequest

@typing_extensions.final
class ImageClozeNoteResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NOTE_FIELD_NUMBER: builtins.int
    ERROR_FIELD_NUMBER: builtins.int
    @property
    def note(self) -> global___ImageClozeNote: ...
    error: builtins.str
    def __init__(
        self,
        *,
        note: global___ImageClozeNote | None = ...,
        error: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["error", b"error", "note", b"note", "value", b"value"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["error", b"error", "note", b"note", "value", b"value"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["value", b"value"]) -> typing_extensions.Literal["note", "error"] | None: ...

global___ImageClozeNoteResponse = ImageClozeNoteResponse
